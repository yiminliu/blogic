<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bedrosian.bedlogic</groupId>
    <artifactId>bedlogic</artifactId>
    <packaging>war</packaging>
    <version>0.0</version>
    <name>bedlogic</name>
    <url>http://cvs.bedrosians.com</url>

    <properties>
       <jdkLevel>1.7</jdkLevel>
       <jersey.version>1.12</jersey.version>
       <jetty.version>6.1.25</jetty.version>
       <org.springframework-version>4.0.0.M3</org.springframework-version>
       <aspectj.version>1.6.11</aspectj.version>
       <hibernate.version>4.2.8.Final</hibernate.version>
       <ehcache.version>2.8.0</ehcache.version>
       <jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>
       <jaxb-api.version>2.2.4</jaxb-api.version>
       <junit.version>4.11</junit.version>
       <apache-commons-logging.version>1.1.1</apache-commons-logging.version>
       <servlet.version>3.0.1</servlet.version>
       <slf4j.version>1.7.5</slf4j.version>
       <logback.version>0.1.1</logback.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>4.0.0.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- Core utilities used by other modules.
            Define this if you use Spring Utility APIs 
            (org.springframework.core.*/org.springframework.util.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <!-- Expression Language (depends on spring-core)
            Define this if you use Spring Expression APIs 
            (org.springframework.expression.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <!-- Bean Factory and JavaBeans utilities (depends on spring-core)
            Define this if you use Spring Bean APIs 
            (org.springframework.beans.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <!-- Aspect Oriented Programming (AOP) Framework 
            (depends on spring-core, spring-beans)
            Define this if you use Spring AOP APIs 
            (org.springframework.aop.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <!-- Application Context 
            (depends on spring-core, spring-expression, spring-aop, spring-beans)
            This is the central artifact for Spring's Dependency Injection Container
            and is generally always defined-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <!-- Transaction Management Abstraction 
            (depends on spring-core, spring-beans, spring-aop, spring-context)
            Define this if you use Spring Transactions or DAO Exception Hierarchy
            (org.springframework.transaction.*/org.springframework.dao.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <!-- JDBC Data Access Library 
            (depends on spring-core, spring-beans, spring-context, spring-tx)
            Define this if you use Spring's JdbcTemplate API 
            (org.springframework.jdbc.*)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <!--  <version>${org.springframework-version}</version>-->
        </dependency>
       	<dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-test</artifactId>
           <!--<version>${springframework-version}</version>-->
        </dependency>	

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>
 
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>jsonrpc2-client</artifactId>
            <version>1.14.4</version>
        </dependency>
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>1.2</version>
        </dependency>
       	<dependency>
           <groupId>org.mockito</groupId>
           <artifactId>mockito-all</artifactId>
           <version>1.9.5</version>
        </dependency>
        <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>javax.servlet-api</artifactId>
           <version>${servlet.version}</version>
           <scope>provided</scope>
        </dependency>
        	<!-- JUnit -->	
        <dependency>
           <groupId>junit</groupId>
           <artifactId>junit</artifactId>
           <version>${junit.version}</version>
           <scope>test</scope>
        </dependency>	
    </dependencies>

    <build>
        <finalName>bedlogic</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>${jdkLevel}</source>
                    <target>${jdkLevel}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <reload>manual</reload>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>8080</port>
                        </connector>
                    </connectors>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
