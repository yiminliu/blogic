package com.bedrosians.bedlogic.domain.product;
// Generated Feb 27, 2014 2:40:59 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", schema = "public")
public class Product implements java.io.Serializable {

	private String productId;
	private ProdEdge prodEdge;
	private ProdMaterialProductStatus prodMaterialProductStatus;
	private ProdBody prodBody = new ProdBody();
	private ProdIcon prodIcon = new ProdIcon();
	private ProdGrade prodGrade = new ProdGrade();
	private ProdStatus prodStatus = new ProdStatus();
	private ProdMaterialCategory prodMaterialCategory = new ProdMaterialCategory();
	private ProdSurfaceApplication prodSurfaceApplication = new ProdSurfaceApplication();
	private ProdDesignLook prodDesignLook = new ProdDesignLook();
	private ProdDesignStyle prodDesignStyle = new ProdDesignStyle();
	private ProdSurfaceType prodSurfaceType = new ProdSurfaceType();
	private ProdSurfaceFinish prodSurfaceFinish = new ProdSurfaceFinish();
	private String description;
	private String seriesName;
	private String category;
	private String color;
	private String colorCategory;
	private String labelCode;
	private String inventoryProdId;
	private String materialClass;
	private String materialType;
	private String materialStyle;
	private String length;
	private String width;
	private String thickness;
	private BigDecimal nominalLength;
	private BigDecimal nominalWidth;
	private BigDecimal nominalThickness;
	private String sizeUnit;
	private String thicknessUnit;
	private BigDecimal mbrp;
	private BigDecimal priorMbrp;
	private String origin;
	private String shadeVariation;
	
	private ProdDetail prodDetail = new ProdDetail();
	private ProdApplication prodApplication = new ProdApplication();
	private ProdTest prodTest = new ProdTest();
	
	private Set<ProdUnit> prodUnits = new HashSet<>(0);
	private Set<ProdPrice> prodPrices = new HashSet<>(0);
    private Set<ProdVendorProductLink> prodVendorProductLinks = new HashSet<>(0);
	private Set<ProdNote> prodNotes = new HashSet<>(0);

	public Product() {
	}

	public Product(String productId) {
		this.productId = productId;
	}

	
	@Id
	@Column(name = "product_id", unique = true, nullable = false, length = 20)
	public String getProductId() {
		return this.productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "edge")
	public ProdEdge getProdEdge() {
		return this.prodEdge;
	}

	public void setProdEdge(ProdEdge prodEdge) {
		this.prodEdge = prodEdge;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "mps_code")
	public ProdMaterialProductStatus getProdMaterialProductStatus() {
		return this.prodMaterialProductStatus;
	}

	public void setProdMaterialProductStatus(
			ProdMaterialProductStatus prodMaterialProductStatus) {
		this.prodMaterialProductStatus = prodMaterialProductStatus;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "body")
	public ProdBody getProdBody() {
		return this.prodBody;
	}

	public void setProdBody(ProdBody prodBody) {
		this.prodBody = prodBody;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "icon")
	public ProdIcon getProdIcon() {
		return this.prodIcon;
	}

	public void setProdIcon(ProdIcon prodIcon) {
		this.prodIcon = prodIcon;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "grade")
	public ProdGrade getProdGrade() {
		return this.prodGrade;
	}

	public void setProdGrade(ProdGrade prodGrade) {
		this.prodGrade = prodGrade;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "status")
	public ProdStatus getProdStatus() {
		return this.prodStatus;
	}

	public void setProdStatus(ProdStatus prodStatus) {
		this.prodStatus = prodStatus;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "material_category")
	public ProdMaterialCategory getProdMaterialCategory() {
		return this.prodMaterialCategory;
	}

	public void setProdMaterialCategory(
			ProdMaterialCategory prodMaterialCategory) {
		this.prodMaterialCategory = prodMaterialCategory;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_application")
	public ProdSurfaceApplication getProdSurfaceApplication() {
		return this.prodSurfaceApplication;
	}

	public void setProdSurfaceApplication(
			ProdSurfaceApplication prodSurfaceApplication) {
		this.prodSurfaceApplication = prodSurfaceApplication;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "design_look")
	public ProdDesignLook getProdDesignLook() {
		return this.prodDesignLook;
	}

	public void setProdDesignLook(ProdDesignLook prodDesignLook) {
		this.prodDesignLook = prodDesignLook;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "design_style")
	public ProdDesignStyle getProdDesignStyle() {
		return this.prodDesignStyle;
	}

	public void setProdDesignStyle(ProdDesignStyle prodDesignStyle) {
		this.prodDesignStyle = prodDesignStyle;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_type")
	public ProdSurfaceType getProdSurfaceType() {
		return this.prodSurfaceType;
	}

	public void setProdSurfaceType(ProdSurfaceType prodSurfaceType) {
		this.prodSurfaceType = prodSurfaceType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_finish")
	public ProdSurfaceFinish getProdSurfaceFinish() {
		return this.prodSurfaceFinish;
	}

	public void setProdSurfaceFinish(ProdSurfaceFinish prodSurfaceFinish) {
		this.prodSurfaceFinish = prodSurfaceFinish;
	}

	@Column(name = "description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "series_name", length = 40)
	public String getSeriesName() {
		return this.seriesName;
	}

	public void setSeriesName(String seriesName) {
		this.seriesName = seriesName;
	}

	@Column(name = "category", length = 16)
	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	@Column(name = "color", length = 30)
	public String getColor() {
		return this.color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	@Column(name = "color_category", length = 30)
	public String getColorCategory() {
		return this.colorCategory;
	}

	public void setColorCategory(String colorCategory) {
		this.colorCategory = colorCategory;
	}

	@Column(name = "label_code", length = 40)
	public String getLabelCode() {
		return this.labelCode;
	}

	public void setLabelCode(String labelCode) {
		this.labelCode = labelCode;
	}

	@Column(name = "inventory_prod_id", length = 20)
	public String getInventoryProdId() {
		return this.inventoryProdId;
	}

	public void setInventoryProdId(String inventoryProdId) {
		this.inventoryProdId = inventoryProdId;
	}

	@Column(name = "material_class", length = 5)
	public String getMaterialClass() {
		return this.materialClass;
	}

	public void setMaterialClass(String materialClass) {
		this.materialClass = materialClass;
	}

	@Column(name = "material_type", length = 24)
	public String getMaterialType() {
		return this.materialType;
	}

	public void setMaterialType(String materialType) {
		this.materialType = materialType;
	}

	@Column(name = "material_style", length = 7)
	public String getMaterialStyle() {
		return this.materialStyle;
	}

	public void setMaterialStyle(String materialStyle) {
		this.materialStyle = materialStyle;
	}

	@Column(name = "length", length = 10)
	public String getLength() {
		return this.length;
	}

	public void setLength(String length) {
		this.length = length;
	}

	@Column(name = "width", length = 10)
	public String getWidth() {
		return this.width;
	}

	public void setWidth(String width) {
		this.width = width;
	}

	@Column(name = "thickness", length = 10)
	public String getThickness() {
		return this.thickness;
	}

	public void setThickness(String thickness) {
		this.thickness = thickness;
	}

	@Column(name = "nominal_length", precision = 9, scale = 4)
	public BigDecimal getNominalLength() {
		return this.nominalLength;
	}

	public void setNominalLength(BigDecimal nominalLength) {
		this.nominalLength = nominalLength;
	}

	@Column(name = "nominal_width", precision = 9, scale = 4)
	public BigDecimal getNominalWidth() {
		return this.nominalWidth;
	}

	public void setNominalWidth(BigDecimal nominalWidth) {
		this.nominalWidth = nominalWidth;
	}

	@Column(name = "nominal_thickness", precision = 9, scale = 4)
	public BigDecimal getNominalThickness() {
		return this.nominalThickness;
	}

	public void setNominalThickness(BigDecimal nominalThickness) {
		this.nominalThickness = nominalThickness;
	}

	@Column(name = "size_unit", length = 3)
	public String getSizeUnit() {
		return this.sizeUnit;
	}

	public void setSizeUnit(String sizeUnit) {
		this.sizeUnit = sizeUnit;
	}

	@Column(name = "thickness_unit", length = 3)
	public String getThicknessUnit() {
		return this.thicknessUnit;
	}

	public void setThicknessUnit(String thicknessUnit) {
		this.thicknessUnit = thicknessUnit;
	}

	@Column(name = "mbrp", precision = 9, scale = 4)
	public BigDecimal getMbrp() {
		return this.mbrp;
	}

	public void setMbrp(BigDecimal mbrp) {
		this.mbrp = mbrp;
	}

	@Column(name = "prior_mbrp", precision = 9, scale = 4)
	public BigDecimal getPriorMbrp() {
		return this.priorMbrp;
	}

	public void setPriorMbrp(BigDecimal priorMbrp) {
		this.priorMbrp = priorMbrp;
	}

	@Column(name = "origin", length = 18)
	public String getOrigin() {
		return this.origin;
	}

	public void setOrigin(String origin) {
		this.origin = origin;
	}

	@Column(name = "shade_variation", length = 2)
	public String getShadeVariation() {
		return this.shadeVariation;
	}

	public void setShadeVariation(String shadeVariation) {
		this.shadeVariation = shadeVariation;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "product", cascade = CascadeType.ALL) 
	public ProdApplication getProdApplication() {
		if(prodApplication.getProductId() == null)
		   prodApplication.setProduct(this);
		return this.prodApplication;
	}

	public void setProdApplication(ProdApplication prodApplication) {
		this.prodApplication = prodApplication;
	}
	
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "product", cascade = CascadeType.ALL)
	public ProdTest getProdTest() {
		if(prodTest.getProductId() == null)
		   prodTest.setProduct(this);
		return this.prodTest;
	}

	public void setProdTest(ProdTest prodTest) {
		//if(prodTest.getProductId() == null)
		 //  prodTest.setProduct(this);	
		this.prodTest = prodTest;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "product", cascade = CascadeType.ALL)
	public ProdDetail getProdDetail() {
		if(prodDetail.getProductId() == null)
		   prodDetail.setProduct(this);	
		return this.prodDetail;
	}

	public void setProdDetail(ProdDetail prodDetail) {
		this.prodDetail = prodDetail;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "product", cascade = CascadeType.ALL)
	public Set<ProdUnit> getProdUnits() {
		return this.prodUnits;
	}

	public void setProdUnits(Set<ProdUnit> prodUnits) {
		this.prodUnits = prodUnits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProdPrice> getProdPrices() {
		return this.prodPrices;
	}

	public void setProdPrices(Set<ProdPrice> prodPrices) {
		this.prodPrices = prodPrices;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProdVendorProductLink> getProdVendorProductLinks() {
		return this.prodVendorProductLinks;
	}

	public void setProdVendorProductLinks(Set<ProdVendorProductLink> prodVendorProductLinks) {
		this.prodVendorProductLinks = prodVendorProductLinks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProdNote> getProdNotes() {
		return this.prodNotes;
	}

	public void setProdNotes(Set<ProdNote> prodNotes) {
		this.prodNotes = prodNotes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((productId == null) ? 0 : productId.hashCode());
		result = prime * result
				+ ((seriesName == null) ? 0 : seriesName.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Product other = (Product) obj;
		if (productId == null) {
			if (other.productId != null)
				return false;
		} else if (!productId.equals(other.productId))
			return false;
		if (seriesName == null) {
			if (other.seriesName != null)
				return false;
		} else if (!seriesName.equals(other.seriesName))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Product ["
				+ "productId=" + productId 
				+ ", description=" + description 
				+ ", seriesName=" + seriesName 
				+ ", category=" + category 
				+ ", color=" + color 
				+ ", labelCode=" + labelCode
				+ ", inventoryProdId=" + inventoryProdId 
				+ ", length=" + length
				+ ", width=" + width 
				+ ", thickness=" + thickness
				+ ", nominalLength=" + nominalLength 
				+ ", nominalWidth=" + nominalWidth 
				+ ", nominalThickness=" + nominalThickness
				+ ", sizeUnit=" + sizeUnit 
				+ ", thicknessUnit=" + thicknessUnit
				+ ", mbrp=" + mbrp 
				+ ", priorMbrp=" + priorMbrp 
				+ ", origin=" + origin 
				+ ", colorCategory=" + colorCategory 
				+ ", prodEdge=" + prodEdge
				+ ", prodMaterialProductStatus=" + prodMaterialProductStatus
				+ ", prodBody=" + prodBody 
				+ ", prodIcon=" + prodIcon
				+ ", prodGrade=" + prodGrade 
				+ ", prodStatus=" + prodStatus
				+ ", prodMaterialCategory=" + prodMaterialCategory
				+ ", prodSurfaceApplication=" + prodSurfaceApplication
				+ ", prodDesignLook=" + prodDesignLook 
				+ ", prodDesignStyle="	+ prodDesignStyle 
				+ ", prodSurfaceType=" + prodSurfaceType
				+ ", prodSurfaceFinish=" + prodSurfaceFinish 
				+ ", materialClass=" + materialClass 
				+ ", materialType=" + materialType
				+ ", materialStyle=" + materialStyle 
				+ ", shadeVariation=" + shadeVariation
				+ ", prodDetail=" + prodDetail 
				+ ", prodApplication=" 	+ prodApplication 
				+ ", prodTest=" + prodTest 
				//+ ", prodUnits=" + prodUnits 
				//+ ", prodPrices=" + prodPrices
				//+ ", prodVendorProductLinks=" + prodVendorProductLinks
				//+ ", prodNotes=" + prodNotes 
				 
				+ "]";
	}
	
	
	

}
