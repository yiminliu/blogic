package com.bedrosians.bedlogic.domain.item;
// Generated Mar 10, 2014 11:44:09 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.bedrosians.bedlogic.domain.item.enums.DesignLook;
import com.bedrosians.bedlogic.domain.item.enums.DesignStyle;
import com.bedrosians.bedlogic.domain.item.enums.Grade;
import com.bedrosians.bedlogic.domain.item.enums.MpsCode;
import com.bedrosians.bedlogic.domain.item.enums.Status;
import com.bedrosians.bedlogic.util.ImsResultUtil;

/**
 * ImsNewFeature generated by hbm2java
 */
@Entity
@Table(name = "ims_new_feature", schema = "public")
public class ImsNewFeature implements java.io.Serializable {

	private String itemcd;
	private Grade grade;
	private Status status;
	private MpsCode mpsCode;
	private DesignLook designLook;
	private DesignStyle designStyle;
	private ImsBody imsBody;
	private ImsEdge imsEdge;
	private ImsIcon imsIcon;
	private ImsSurfaceApplication imsSurfaceApplication;
	private Item item;
	private ImsSurfaceType imsSurfaceType;
	private ImsSurfaceFinish imsSurfaceFinish;
	private Date createdDate;
	private Date launchedDate;
	private Date lastModifiedDate;

	public ImsNewFeature() {
	}

	
	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "item"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "itemcd", unique = true, nullable = false, length = 15)
	public String getItemcd() {
		return this.itemcd;
	}

	public void setItemcd(String itemcd) {
		this.itemcd = itemcd;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "edge")
	public ImsEdge getImsEdge() {
		return this.imsEdge;
	}

	public void setImsEdge(ImsEdge imsEdge) {
		this.imsEdge = imsEdge;
	}

	@Column(name="mps_code")
	@Enumerated(EnumType.STRING)
	public MpsCode getMpsCode() {
		//return (imsMaterialProductStatus != null? imsMaterialProductStatus : ImsResultUtil.getMps(item));
		return mpsCode;
	}

	public void setMpsCode(MpsCode mpsCode) {
		this.mpsCode = mpsCode;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "body")
	public ImsBody getImsBody() {
		return this.imsBody;
	}

	public void setImsBody(ImsBody imsBody) {
		this.imsBody = imsBody;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "icon")
	public ImsIcon getImsIcon() {
		return this.imsIcon;
	}

	public void setImsIcon(ImsIcon imsIcon) {
		this.imsIcon = imsIcon;
	}

	@Column(name = "grade")
	@Enumerated(EnumType.STRING)
	public Grade getGrade() {
		return this.grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}

	//@ManyToOne(fetch = FetchType.EAGER)
	//@JoinColumn(name = "status")
	@Column(name="status")
	@Enumerated(EnumType.STRING)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}
	
	//@ManyToOne(fetch = FetchType.EAGER)
	@Column(name="design_look")
	@Enumerated(EnumType.STRING)
	public DesignLook getDesignLook() {
		return this.designLook;
	}

	public void setDesignLook(DesignLook designLook) {
		this.designLook = designLook;
	}

	//@ManyToOne(fetch = FetchType.EAGER)
	//@JoinColumn(name = "design_style")
	@Column(name="design_style")
	@Enumerated(EnumType.STRING)
	public DesignStyle getDesignStyle() {
		return this.designStyle;
	}

	public void setDesignStyle(DesignStyle designStyle) {
		this.designStyle = designStyle;
	}
		
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_application")
	public ImsSurfaceApplication getImsSurfaceApplication() {
		return this.imsSurfaceApplication;
	}

	public void setImsSurfaceApplication(
			ImsSurfaceApplication imsSurfaceApplication) {
		this.imsSurfaceApplication = imsSurfaceApplication;
	}

	@JsonIgnore
	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Item getItem() {
		return this.item;
	}

	public void setItem(Item item) {
		//item.setImsNewFeature(this);
		this.item = item;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_type")
	public ImsSurfaceType getImsSurfaceType() {
		return this.imsSurfaceType;
	}

	public void setImsSurfaceType(ImsSurfaceType imsSurfaceType) {
		this.imsSurfaceType = imsSurfaceType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "surface_finish")
	public ImsSurfaceFinish getImsSurfaceFinish() {
		return this.imsSurfaceFinish;
	}

	public void setImsSurfaceFinish(ImsSurfaceFinish imsSurfaceFinish) {
		this.imsSurfaceFinish = imsSurfaceFinish;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "launched_date", length = 13)
	public Date getLaunchedDate() {
		return this.launchedDate;
	}

	public void setLaunchedDate(Date launchedDate) {
		this.launchedDate = launchedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "last_modified_date", updatable=false, insertable=false)
	@Generated(GenerationTime.ALWAYS)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((itemcd == null) ? 0 : itemcd.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ImsNewFeature other = (ImsNewFeature) obj;
		if (itemcd == null) {
			if (other.itemcd != null)
				return false;
		} else if (!itemcd.equals(other.itemcd))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ImsNewFeature ["
				+ "itemcd=" + itemcd 
				+ ", imsEdge=" + imsEdge
				//+ ", imsMaterialProductStatus=" + imsMaterialProductStatus
				+ ", imsBody=" + imsBody 
				+ ", imsIcon=" + imsIcon
				+ ", imsGrade=" + grade 
				+ ", imsStatus=" + status
				+ ", imsSurfaceApplication=" + imsSurfaceApplication
				+ ", imsDesignLook=" + designLook 
				+ ", imsDesignStyle=" + designStyle 
				+ ", imsSurfaceType=" + imsSurfaceType
				+ ", imsSurfaceFinish=" + imsSurfaceFinish 
				+ ", createdDate=" + createdDate 
				+ ", launchedDate=" + launchedDate
				+ ", lastModifiedDate=" + lastModifiedDate 
				+ "]";
	}
	
	

}
